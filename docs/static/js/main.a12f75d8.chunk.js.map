{"version":3,"sources":["Components/Search/Search.js","Components/Header/Header.js","Components/CreateBookMark/CreateBookMark.js","Components/Bookmark/Bookmark.js","App.js","serviceWorker.js","index.js"],"names":["Search","_ref","onSearch","query","react_default","a","createElement","Form","inline","FormControl","type","placeholder","className","value","onChange","e","target","size","Button","variant","onClick","Header","onCreate","Navbar","bg","expand","Brand","href","Nav","Item","Link","role","Search_Search","CreateBookMark","props","_useState","useState","_useState2","Object","slicedToArray","label","setLabel","_useState3","_useState4","url","setUrl","_useState5","_useState6","tags","setTags","Modal","show","onHide","closeButton","Body","CreateBookMark_InputLabel","CreateBookMark_InputUrl","CreateBookMark_InputTags","onAdd","tag","concat","options","availableTags","CreateBookMark_Tags","values","onRemove","_","Footer","bookMark","InputLabel","CreateBookMark_InputText","InputUrl","InputTags","_useState7","_useState8","currentTag","setCurrentTag","_useState9","_useState10","showTagDropDown","setShowTagDropDown","_useState11","_useState12","dropDownValues","setDropDownValues","handleTagChange","isNullOrWhitespace","filter","o","b","toUpperCase","includes","length","FormGroup","Row","Col","sm","FormLabel","column","onKeyPress","key","CreateBookMark_TagDropDown","onSelect","TagDropDown","span","offset","Dropdown","Menu","map","index","Tags","Badge","index_esm","InputText","input","replace","Bookmark","Table","Bookmark_HeaderLabels","Bookmark_Content","content","bookmarks","HeaderLabels","Content","item","Bookmark_Item","Bookmark_Tags","App","setQuery","showCreate","setShowCreate","bookMarks","setBookMarks","Header_Header","CreateBookMark_CreateBookMark_CreateBookMark","Bookmark_Bookmark","keyword","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a12f75d8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Button, Form, FormControl} from 'react-bootstrap';\n\nexport const Search = ({onSearch, query}) => {\n    return <Form inline>\n        <FormControl\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"mr-sm-2\"\n            value={query}\n            onChange={(e) => onSearch(e.target.value)}\n            size='lg'\n        />\n        <Button\n            variant=\"outline-info\"\n            onClick={() => onSearch(query)}\n            size='lg'\n        >\n            Search\n        </Button>\n    </Form>;\n};\n\nSearch.propTypes = {\n    onSearch: PropTypes.func,\n    query: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Nav, Navbar} from 'react-bootstrap';\nimport {Search} from '../Search/Search';\n\nexport const Header = ({ onSearch, query, onCreate }) => {\n    return (\n        <Navbar\n            bg=\"dark\"\n            expand=\"lg\"\n            variant=\"dark\"\n        >\n            <Navbar.Brand href=\"#home\" >Boc-Marc</Navbar.Brand>\n            <Nav variant=\"pills\" className=\"mr-auto\">\n                <Nav.Item onClick={onCreate}>\n                    <Nav.Link size=\"lg\" role=\"button\" >\n                        Create\n                    </Nav.Link>\n                </Nav.Item>\n            </Nav>\n            <Search onSearch={onSearch} query={query} />\n        </Navbar>\n    );\n};\n\nHeader.propTypes = {\n    onSearch: PropTypes.func,\n    query: PropTypes.string,\n    onCreate: PropTypes.func,\n};","import React, {useState} from 'react';\nimport {Badge, Button, Col, Dropdown, Form, FormControl, FormGroup, FormLabel, Modal, Row} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport {IoMdClose} from 'react-icons/io';\nimport * as _ from 'lodash';\n\nimport './CreateBookMark.css';\n\nexport const CreateBookMark = (props) => {\n\n    const [label, setLabel] = useState('');\n    const [url, setUrl] = useState('');\n    const [tags, setTags] = useState([]);\n    const handleRemoveTag = (tag) => {\n        setTags(_.difference(tags, [tag]));\n    };\n    const handleCreate = () => {\n        let bookMark = {\n            label,\n            url,\n            tags,\n        };\n\n        props.onCreate(bookMark);\n\n        setLabel('');\n        setUrl('');\n        setTags([]);\n    };\n\n    return (\n        <Modal show={props.show} onHide={props.onHide}>\n            <Modal.Header closeButton>\n                Create Boc-Marc\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <InputLabel value={label} onChange={setLabel} />\n                    <InputUrl value={url} onChange={setUrl}/>\n                    <InputTags\n                        onAdd={(tag) => setTags(tags.concat(tag))}\n                        options={props.availableTags}\n                    />\n                </Form>\n                <Tags values={tags} onRemove={handleRemoveTag} />\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={props.onHide}>\n                    Cancel\n                </Button>\n                <Button variant=\"primary\" onClick={handleCreate}>\n                    Create\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nconst InputLabel = (props) => (\n    <InputText\n        placeholder=\"label\"\n        label=\"Label\"\n        onChange={(e) => props.onChange(e.target.value)}\n        value={props.value}\n    />\n);\n\nconst InputUrl = (props) => (\n    <InputText\n        placeholder=\"url\"\n        label=\"Url\"\n        onChange={(e) => props.onChange(e.target.value)}\n        value={props.value}\n    />\n);\n\nconst InputTags = (props) => {\n    const [currentTag, setCurrentTag] = useState('');\n    const [showTagDropDown, setShowTagDropDown] = useState(false);\n    const [dropDownValues, setDropDownValues] = useState(props.options);\n    const includeIgnoreCase = (a,b) => a.toUpperCase().includes(b.toUpperCase());\n    const handleTagChange = (value) => {\n        setCurrentTag(value);\n        if (!isNullOrWhitespace(value)) {\n            setDropDownValues(props.options.filter((o) => includeIgnoreCase(o, value)));\n            setShowTagDropDown(dropDownValues.length !== 0);\n        } else {\n            setDropDownValues(props.options);\n            setShowTagDropDown(false);\n        }\n    };\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            props.onAdd(currentTag);\n            handleTagChange('');\n        }\n    };\n    const handleSelect = (value) => {\n        props.onAdd(value);\n        setCurrentTag('');\n        setShowTagDropDown(false);\n    };\n\n    return (\n        <div>\n            <FormGroup>\n                <Row className=\"justify-content-center\">\n                    <Col sm=\"2\">\n                        <FormLabel column >\n                            Tags\n                        </FormLabel>\n                    </Col>\n                    <Col sm=\"9\">\n                        <FormControl\n                            type=\"text\"\n                            placeholder=\"tags\"\n                            onChange={(e) => handleTagChange(e.target.value)}\n                            value={currentTag}\n                            onKeyPress={handleKeyPress}\n                        />\n                    </Col>\n                </Row>\n                {showTagDropDown\n                    ? <TagDropDown\n                        show={showTagDropDown}\n                        values={dropDownValues}\n                        onSelect={handleSelect}\n                    />\n                    : null\n                }\n            </FormGroup>\n        </div>\n    );\n};\n\nconst TagDropDown = (props) => (\n    <Row className=\"justify-content-center\">\n        <Col sm={{span:'9', offset:'3'}} >\n            <Dropdown.Menu show={props.show} className=\"scrollable-menu\">\n                {props.values.map((value, index) => (\n                    <Dropdown.Item\n                        key={`dd-${index}`}\n                        onClick={() => props.onSelect(value)}\n                    >\n                        {value}\n                    </Dropdown.Item>\n                ))}\n            </Dropdown.Menu>\n        </Col>\n    </Row>\n);\n\nconst Tags = (props) => (\n    <Row className=\"justify-content-center\">\n        <Col sm={{span:'9', offset: '2'}}>\n            {props.values.map((tag, index) => (\n                <span key={`tag-${index}`} >\n                    <Badge\n                        variant=\"secondary\"\n                        className=\"mr-1\"\n                    >\n                        {`${tag} `}\n                        <IoMdClose onClick={() => props.onRemove(tag)} />\n                    </Badge>\n                </span>\n            ))}\n        </Col>\n    </Row>\n);\n\nconst InputText = (props) => (\n    <FormGroup>\n        <Row className=\"justify-content-center\">\n            <Col sm=\"2\">\n                <FormLabel column >\n                    {props.label}\n                </FormLabel>\n            </Col>\n            <Col sm=\"9\">\n                <FormControl\n                    type=\"text\"\n                    placeholder={props.placeholder}\n                    onChange={props.onChange}\n                    value={props.value}\n                    onKeyPress={props.onKeyPress}\n                />\n            </Col>\n        </Row>\n    </FormGroup>\n);\n\nconst isNullOrWhitespace = ( input ) => {\n\n    if (input == null) return true;\n\n    return input.replace(/\\s/gi, '').length < 1;\n};\n\nInputText.propTypes = {\n    placeholder: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    label: PropTypes.string,\n    onKeyPress: PropTypes.func,\n};\n\nCreateBookMark.propTypes = {\n    show: PropTypes.bool,\n    onHide: PropTypes.func,\n    availableTags: PropTypes.array,\n    onCreate: PropTypes.func,\n};\n\nInputLabel.propTypes = InputUrl.propTypes = {\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n};\n\nTagDropDown.propTypes = {\n    values: PropTypes.array,\n    show: PropTypes.bool,\n    onSelect: PropTypes.func,\n};\n\nInputTags.propTypes = {\n    options: PropTypes.array,\n    onAdd: PropTypes.func,\n};\n\nTags.propTypes = {\n    onRemove: PropTypes.func,\n    values: PropTypes.array,\n};\n","import {Badge, Table} from 'react-bootstrap';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Bookmark  = (props) => {\n    return <Table>\n        <HeaderLabels/>\n        <Content content={props.bookmarks} />\n    </Table>;\n};\n\nconst HeaderLabels = () => (\n    <thead>\n        <tr>\n            <th>#</th>\n            <th>Label</th>\n            <th>Url</th>\n            <th>Tags</th>\n        </tr>\n    </thead>\n);\n\nconst Content = (props) => (\n    <tbody>\n        {props.content.map((item, index) => <Item\n            item={item}\n            index={index}\n            key={`item-${index}`}\n        />)}\n    </tbody>\n);\n\nconst Item = (props) => (\n    <tr>\n        <td>{props.index}</td>\n        <td>{props.item.label}</td>\n        <td>{props.item.url}</td>\n        <Tags tags={props.item.tags}/>\n    </tr>\n);\n\nconst Tags = (props) => (\n    <td>\n        {props.tags.map((tag, index)=> (\n            <Badge variant=\"secondary\" key={`badge-${index}`} className=\"mr-1\">\n                {tag}\n            </Badge>\n        ))}\n    </td>\n);\n\nBookmark.propTypes = {\n    bookmarks: PropTypes.array,\n};\n\nContent.propTypes = {\n    content: PropTypes.array,\n};\n\nTags.propTypes = {\n    tags: PropTypes.array,\n};\n\nItem.propTypes = {\n    index: PropTypes.number,\n    item: PropTypes.object,\n};\n","import React, {useState} from 'react';\nimport {Header} from './Components/Header/Header';\nimport {CreateBookMark} from './Components/CreateBookMark/CreateBookMark';\nimport * as _ from 'lodash';\nimport {Bookmark} from './Components/Bookmark/Bookmark';\n\nexport const App = () => {\n    const [query, setQuery] = useState('');\n    const [showCreate, setShowCreate] = useState(false);\n    const [bookMarks, setBookMarks] = useState([]);\n    const [tags, setTags] = useState(['sample', 'tag']);\n    const handleAddBookMark = bookMark => {\n        setBookMarks(bookMarks.concat(bookMark));\n        setTags(_.uniq(tags.concat(bookMark.tags)));\n        setShowCreate(false);\n    };\n    return <div>\n        <Header onSearch={setQuery} onCreate={() => setShowCreate(true)}/>\n        <CreateBookMark\n            show={showCreate}\n            onHide={() => setShowCreate(false)}\n            onCreate={handleAddBookMark}\n            availableTags={tags}\n        />\n        <Bookmark\n            bookmarks={bookMarks}\n            keyword={query}\n        />\n    </div>;\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}